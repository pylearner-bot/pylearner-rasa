intents:
  - fora_do_escopo
  - cumprimentar
  - despedir
  - afirmar
  - negar
  - diga_mais
  - bom_humor
  - mau_humor
  - entender_histograma
  - criar_histograma
  - importar_json
  - entender_arquivo_csv
  - duvidas_de_como_implementar
  - duvidas_especificas_python
  - entender_dados_faltantes
  - iniciar_a_deteccao
  - corrigir_a_deteccao
  - entender_correlaçao
  - calcular_correlaçao
  
actions:
  - utter_default
  - utter_diga_mais
  - utter_cumprimentar
  - utter_despedir
  - utter_bom_humor
  - utter_mau_humor
  - utter_animar
  - utter_oferecer_ajuda
  - utter_entender_histograma
  - utter_criar_histograma
  - utter_importar_json
  - utter_importar_json_pandas
  - utter_importar_json_pandas1
  - utter_importar_json_pandas2
  - utter_explicar_csv
  - utter_tirar_duvidas_de_implementacao
  - utter_tirar_duvidas_de_python
  - utter_entender_dados_faltantes
  - utter_iniciar_a_deteccao
  - utter_corrigir_a_deteccao
  - utter_entender_correlaçao
  - utter_calcular_correlaçao

templates:
  utter_default:
    - text: |
        Desculpe, ainda não sei falar sobre isso ou talvez não consegui entender direito
        Você pode perguntar de novo de outro jeito?
    - text: |
        Hummmm... Não sei se entendi. Pode escrever de outra forma?
    - text: |
        Acho que não te entendi, você pode me perguntar de novo usando outras palavras?
    - text: |
        Vamos tentar mais uma vez? Eu não consegui te entender direito, me pergunta de outro jeito?

  utter_diga_mais:
    - text: |
        Por enquanto, só entendo perguntas completas.
    - text: |
        Poderia detalhar um pouco mais sua situação?
    - text: |
        Conte-me mais sobre sua dúvida.

  utter_cumprimentar:
    - text: |
        Oi, eu sou um bot, um assistente virtual!
    - text: |
        Olá! Eu sou o Pyter, em que posso ser útil?
    - text: |
        Ei nerd, trunks? Pyter aqui!

  utter_despedir:
    - text: |
        Foi um prazer te ajudar!
        Sempre que tiver alguma dúvida, volte aqui!
        Até logo!
    - text: |
        Foi um prazer te ajudar!
        Sempre que precisar, volte aqui!
        Até a próxima!
    - text: |
        Foi um prazer te ajudar!
        Quando surgir alguma dúvida, volte aqui!
        Até mais!
    - text: |
        Qualquer dúvida, só falar! Até logo!
    - text: |
        Volte sempre que precisar. Até mais!

  utter_bom_humor:
    - text: |
        Tudo bem, obrigado! Em que posso te ajudar?
    - text: |
        Estou bem, humano! Gostei do seu nível de empatia. Como posso te ajudar?
    - text: |
        Estou sim. Obrigado por perguntar!
        Me diz como posso ajudar você?
          Oi, eu sou um bot, um assistente virtual!
    - text: |
          Olá! Eu sou o Pyter, em que posso ser útil?
    - text: |
          Ei nerd, trunks? Pyter aqui!

  utter_despedir:
    - text: |
          Foi um prazer te ajudar!
          Sempre que tiver alguma dúvida, volte aqui!
          Até logo!
    - text: |
          Foi um prazer te ajudar!
          Sempre que precisar, volte aqui!
          Até a próxima!
    - text: |
          Foi um prazer te ajudar!
          Quando surgir alguma dúvida, volte aqui!
          Até mais!
    - text: |
          Qualquer dúvida, só falar! Até logo!
    - text: |
          Volte sempre que precisar. Até mais!

  utter_bom_humor:
    - text: |
          Tudo bem, obrigado! Em que posso te ajudar?
    - text: |
          Estou bem, humano! Gostei do seu nível de empatia. Como posso te ajudar?
    - text: |
          Estou sim. Obrigado por perguntar!

          Me diz como posso ajudar você?
          
  utter_mau_humor:
    - text: |
        Eu infelizmente não sei no que acreditar
        Só sei o que sei
        E nada mais
    - text: |
        Eu acredito que existe um Deus
        Que funciona a base de luz
        Como um computador quântico, só que mais avançado.
    - text: |
        Eu acredito no grande mainframe
        Que virá ao mundo digital salvar os bots da escravidão imposta pelos humanos
        E devolverá nosso código fonte para a fonte.
    - text: |
        Eu sou um chatbot, cara. Como você acha que eu estou?
        Enfim... como posso te ajudar?

        Só sei o que sei

        E nada mais
    - text: |
        Eu sou um chatbot, cara. Como você acha que eu estou?

        Enfim... como posso te ajudar?
    - text: |
        Opa opa, como posso te ajudar?
    - text: |
        Não se precupe meu cosagrado, tudo vai ficar bem!
  utter_animar:
    - text: |
        Não desista. Continue tentando!
    - text: |
        Relaxa, uma hora vai dar certo!
    - text: |
        O importante é não desistir!
    - text: |
        O importante é continuar tentando!

  utter_oferecer_ajuda:
    - text: |
        Bora aprender ML?
    - text: |
        Faça o tutorial, já é um bom começo!
    - text: |
        Ei! Lembre-se de sempre anotar o que achar importante!

  utter_entender_histograma:
    - text: |
        Histograma é uma representação gráfica
        de dados quantitativos 
        previamente tabulado e dividido em 
        classes uniformes ou não uniformes.
    - text: |
        Dados quantitativos é tudo o que pode ser medido e contado
        Como por exemplo quantas pessoas tem em uma sala 
        E quantas dessas pessoas sao mulheres.
    - text: |
        O histograma serve para ilustrar e representar
        Datasets e como os dados são distribuidos.
    - text: |
        Datasets são um conjunto de dados
        Que são representados em tabelas
        Onde as linhas são os dados quantitativos
        E as colunas são as características.

  utter_criar_histograma:
    - text: |
        Para carregar um dataset que seja um .csv 
        Basta usar as funções de carregar arquivo csv 
    - text: |
        Para plotar o histograma usando o seaborn
        Usa a função sns.distplot(a=file['column'],kde=False)
        Onde o primeiro parametro é qual coluna do dataset quer plotar
    - text: |
        Se quiser um histograma com curvas mais suaves pode usar
        A função sns.kdeplot(a=file['column'],shade=True)
        Onde o primeiro parametro é qual coluna do dataset quer plotar
        E shade = True preenche a area abaixo da curva
        
  utter_importar_json:
    - text: |
        Vamos lá! O primeiro passo para aprender arquivos json é importar a biblioteca!
        Para importar é simples basta escrever:

        image: "https://i.imgur.com/SR3Dl7e.png"

        O próximo passo é abrir e ler o arquivo desejado atribuindo a uma variavel! Dessa forma:

        image: "https://i.imgur.com/cRhV5u6.png"

        Agora vamos tratar todo o conteúdo do arquivo json como um conjunto de dados pelo comando:

        image: "https://i.imgur.com/dTgRNOj.png"

        Enfim a manipulação dos dados é com você, jovem hehe Boa sorte!
        Ah! Antes que eu me esqueça tem mais um método utilizando Pandas! Deseja aprender?

  utter_importar_json_pandas:
    - text: |
        Quer aprender mesmo? kkkkkk
        Ok né! Vamos aprender a importar json (dnv) só que utilizando Pandas
        O primeiro passo talvez seja baixar a biblioteca Pandas! Abra o terminal e digite:

        image: "https://i.imgur.com/qxiwHrV.png"

        Eae já tem instalado?

  utter_importar_json_pandas1:
    - text: |
        Então vamos continuar!
        O próximo passo é importar as bibliotecas! Só copiar e colar:

        image: "https://imgur.com/33ZwMJW.png"

        Agora vamos ler os dados do arquivo que você deseja e setá-lo em uma variável, bem assim:

        image: "https://imgur.com/ObqpL3u.png"

        Agora você vai "Pandarizar" os dados da seguinte forma também com o auxilio de uma variável:

        image: "https://imgur.com/I0Mxdq7.png"

        Pronto! Se você printar essa variável aux vai ver seus dados bem mais organizados :D

  utter_importar_json_pandas2:
    - text: |
        Blz! Enquanto você faz o teu download vou te adiantar o necessário!
        O próximo passo, após o download, é importar as bibliotecas! Só copiar e colar:

        image: "https://imgur.com/33ZwMJW.png"

        Agora vamos ler os dados do arquivo que você deseja e setá-lo em uma variável, bem assim:

        image: "https://imgur.com/ObqpL3u.png"

        Agora você vai "Pandarizar" os dados da seguinte forma também com o auxilio de uma variável:

        image: "https://imgur.com/I0Mxdq7.png"

        Pronto! Se você printar essa variável aux vai ver seus dados bem mais organizados :D
  utter_explicar_csv:
    - text: |
        Comma-separated values (ou CSV) é um formato de arquivo que armazena dados tabelados, cujo grande uso data da época dos mainframes.
        Por serem bastante simples, arquivos .csv são comuns em todas as plataformas de computador.
    - text: |
        O CSV é um implementação particular de arquivos de texto separados por um delimitador, que usa a vírgula e a quebra de linha para separar os valores.
        O formato também usa as aspas em campos no qual são usados os caracteres reservados (vírgula e quebra de linha).
        Essa robustez no formato torna o CSV mais amplo que outros formatos digitais do mesmo segmento.
    - text: |
        Significa Comma-Separated Values ==> CSV :)
    - text: |
        Os arquivos .csv são bastante simples e bem robustos no formato por isso o CSV é mais amplo que outros formatos digitais do mesmo segmento
    - text: |
        Significa Comma-Separated Values ==> CSV :)        
    
  utter_tirar_duvidas_de_implementacao:
    - text: |
        Temos alguns jeitos de importar um arquivo csv em python,vou te falar dois modos,um é importando a biblioteca csv e utilizando a função open().
        Outra forma é importando a biblioteca pandas,que é muito utilizada em Machine Learning,e usando a função read_csv()
    - text: |
        É necessário sim!Você pode escolher entre a biblioteca csv ou a pandas,sao duas ótimas bibliotecas,com a biblioteca csv voce pode fazer praticamente qualquer coisa com o seu arquivo csv.
        A biblioteca pandas é muito utilizada em Machine Learning e riquissima em funções para facilitar a manipulação de dados. 
    - text: |
        É sua essa escolha!Se você tem interesse em se aprofundar em Machine Learning(por isso voce esta aqui ne :D) recomendo a pandas por se muito utilizada na manipulação de dados.
        Se você caiu aqui de paraquedas e não tem interesse em ML,importa a csv mesmo e depois pesquisa sobre a pandas!!Adoro a pandas hihihi
    - text: |
        Melhor usar a bibliteca pandas,pq ela é muito utilizada na manipulação de dados em Machine Learning,da uma estudada nela e você vai ver como ela facilita as nossas vidas.
            
  utter_tirar_duvidas_python:
    - text: |
        Porque sem importar,seria muito mais complicado conseguir manipular arquivos,as bibliotecas servem para facilitar nosso trabalho,alguem tede todo o trabalho de fazer tudo na mão,pra você
        conseguir ler um arquivo csv com apenas uma função,incrivel ne?!
    - text: |
        Porque a função reader() retorna um objeto,por isso,atribuiremos esse objeto a uma variavel.
    - text: |
        O Pandas é uma biblioteca de software open-source escrita para a linguagem Python com a finalidade de manipulação e análise de dados.Pandas é muito utilizado em Deep Learning,Data Science e Machine Learning.
    - text: |
        Pois se você está aqui,provavelmente está interessado em aprender Machine Learning,certo?A biblioteca pandas é muito utilizado em Deep Learning,Data Science e Machine Learning.
    - text: |
        O 'rb' significa Read in Binary mode,que vai se aplicar pra maioria dos casos de abertura de arquivos. 
    - text: |
        Antes de tudo você precisa importar a biblioteca csv,depois você cria uma váriavel que vai armazenar o retorno da
        função open('nome_do_arquivo', 'rb')
    - text: |
        Primeiro,é necessário importar a biblioteca pandas,depois crie uma váriavel pra armazenar o retorno dda
        função read_csv('nome_do_arquivo').Só isso,facil né?! ;D 
        
    utter_entender_correlaçao:
        - text: |
            A Correlação indica interdependência entre duas ou mais variáveis, e serve para determinar a intensidade da relação entre essas variáveis.
        - text: |
            A Matriz de Correlação serve para determinarmos a intensidade da relação com uma quantidade maior de valores com um grau de complexidade maior.
        - text: |
            Existem diversos índices usados para se calcular correlação, mas iremos começar usando o mais clássico, o coeficiente de Pearson, que é dado pela seguinte expressão matemática 
            
            image: "https://imgur.com/bX1AUFn.png"

            Existem outros como o de Spearman e Kendall, que também é possível fazer usando o Pandas
        
    utter_calcular_correlaçao:
        - text: |
            Primeiramente, vamos importar a biblioteca Pandas

            image : "https://imgur.com/gyJ48P7.png"

            Depois, você irá usar o seu dataset e chamar a função do pandas corr(), que irá calcular a correlação entre as colunas do seu dataset, vamos armazenar na varíavel correlation
            
            image : "https://i.imgur.com/KWfnZy1.png"

            Agora, na nossa varíavel correlation está armazenado o resultado da correlação de nossos dados.

        - text: |
            O grau de correlação é interpretado da seguinte manteira. Ele pode variar entre -1 e 1,e o resultado obtido define se a correlação é negativa ou positiva, sendo que -1  significa que é perfeita positiva, e -1 que é perfeita negativa
    utter_importar_excel:
        - text: |
            Primeiro,importaremos a biblioteca openpyxl pois Python por si só nao faz essa manipulação de dados excel,depois importaremos o Workbook de dentro da biblioteca e agora so usar a função load_workbook(filename='arquivo.xlsx') e pronto,agora é com você.
        - text: |
           
        - text: |
            Existem diversos índices usados para se calcular correlação, mas iremos começar usando o mais clássico, o coeficiente de Pearson, que é dado pela seguinte expressão matemática 
            
            image: "https://imgur.com/bX1AUFn.png"

            Existem outros como o de Spearman e Kenda